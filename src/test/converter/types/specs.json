{
  "id": 0,
  "name": "typedoc",
  "kind": 1,
  "flags": {},
  "children": [
    {
      "id": 1,
      "name": "general",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 8,
          "name": "BigIntAlias",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "general.ts",
              "line": 12,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "bigint"
          }
        },
        {
          "id": 2,
          "name": "BigIntLiteral",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "general.ts",
              "line": 3,
              "character": 12
            }
          ],
          "type": {
            "type": "literal",
            "value": {
              "value": "1",
              "negative": false
            }
          }
        },
        {
          "id": 4,
          "name": "NegativeBigIntLiteral",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "general.ts",
              "line": 6,
              "character": 12
            }
          ],
          "type": {
            "type": "literal",
            "value": {
              "value": "1",
              "negative": true
            }
          }
        },
        {
          "id": 9,
          "name": "NegativeOne",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "general.ts",
              "line": 14,
              "character": 12
            }
          ],
          "type": {
            "type": "literal",
            "value": -1
          }
        },
        {
          "id": 6,
          "name": "NumArray",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "general.ts",
              "line": 9,
              "character": 12
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        },
        {
          "id": 3,
          "name": "BigIntLiteralType",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "general.ts",
              "line": 4,
              "character": 13
            }
          ],
          "type": {
            "type": "literal",
            "value": {
              "value": "1",
              "negative": false
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 5,
          "name": "NegativeBigIntLiteralType",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "general.ts",
              "line": 7,
              "character": 13
            }
          ],
          "type": {
            "type": "literal",
            "value": {
              "value": "1",
              "negative": true
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 10,
          "name": "negativeOne",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "general.ts",
              "line": 15,
              "character": 13
            }
          ],
          "type": {
            "type": "literal",
            "value": -1
          },
          "defaultValue": "-1"
        },
        {
          "id": 7,
          "name": "numArray",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "general.ts",
              "line": 10,
              "character": 13
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "number"
            }
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            8,
            2,
            4,
            9,
            6
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            3,
            5,
            10,
            7
          ]
        }
      ],
      "sources": [
        {
          "fileName": "general.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 11,
      "name": "index-signature",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 15,
          "name": "PartialIndex",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "sources": [
            {
              "fileName": "index-signature.ts",
              "line": 5,
              "character": 17
            }
          ],
          "indexSignature": {
            "id": 16,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 17,
                "name": "optName",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "template-literal",
                  "head": "data-",
                  "tail": [
                    [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      ""
                    ]
                  ]
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        },
        {
          "id": 12,
          "name": "SymbolIndex",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "sources": [
            {
              "fileName": "index-signature.ts",
              "line": 1,
              "character": 17
            }
          ],
          "indexSignature": {
            "id": 13,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 14,
                "name": "sym",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        },
        {
          "id": 18,
          "name": "UnionIndex",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "sources": [
            {
              "fileName": "index-signature.ts",
              "line": 9,
              "character": 17
            }
          ],
          "indexSignature": {
            "id": 19,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 20,
                "name": "optName",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "symbol"
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            15,
            12,
            18
          ]
        }
      ],
      "sources": [
        {
          "fileName": "index-signature.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 21,
      "name": "mapped",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 32,
          "name": "DoubleKey",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "mapped.ts",
              "line": 7,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 33,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "mapped",
            "parameter": "K",
            "parameterType": {
              "type": "intersection",
              "types": [
                {
                  "type": "typeOperator",
                  "target": {
                    "type": "reference",
                    "id": 33,
                    "name": "T"
                  },
                  "operator": "keyof"
                },
                {
                  "type": "intrinsic",
                  "name": "string"
                }
              ]
            },
            "templateType": {
              "type": "indexedAccess",
              "indexType": {
                "type": "reference",
                "name": "K"
              },
              "objectType": {
                "type": "reference",
                "id": 33,
                "name": "T"
              }
            },
            "nameType": {
              "type": "template-literal",
              "head": "",
              "tail": [
                [
                  {
                    "type": "reference",
                    "name": "K"
                  },
                  ""
                ],
                [
                  {
                    "type": "reference",
                    "name": "K"
                  },
                  ""
                ]
              ]
            }
          }
        },
        {
          "id": 30,
          "name": "Mappy",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "mapped.ts",
              "line": 5,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 31,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "mapped",
            "parameter": "K",
            "parameterType": {
              "type": "typeOperator",
              "target": {
                "type": "reference",
                "id": 31,
                "name": "T"
              },
              "operator": "keyof"
            },
            "templateType": {
              "type": "indexedAccess",
              "indexType": {
                "type": "reference",
                "name": "K"
              },
              "objectType": {
                "type": "reference",
                "id": 31,
                "name": "T"
              }
            }
          }
        },
        {
          "id": 26,
          "name": "doubleKey",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "mapped.ts",
              "line": 9,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 27,
              "name": "doubleKey",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 28,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 29,
                  "name": "arg",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 28,
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "mapped",
                "parameter": "K",
                "parameterType": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "templateType": {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "reference",
                    "name": "K"
                  },
                  "objectType": {
                    "type": "reference",
                    "id": 28,
                    "name": "T"
                  }
                },
                "nameType": {
                  "type": "template-literal",
                  "head": "",
                  "tail": [
                    [
                      {
                        "type": "reference",
                        "name": "K"
                      },
                      ""
                    ],
                    [
                      {
                        "type": "reference",
                        "name": "K"
                      },
                      ""
                    ]
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 22,
          "name": "mapped",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "mapped.ts",
              "line": 1,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 23,
              "name": "mapped",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 24,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 25,
                  "name": "arg",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 24,
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "mapped",
                "parameter": "K",
                "parameterType": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    {
                      "type": "intrinsic",
                      "name": "symbol"
                    }
                  ]
                },
                "templateType": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "readonlyModifier": "-",
                "optionalModifier": "+"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            32,
            30
          ]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            26,
            22
          ]
        }
      ],
      "sources": [
        {
          "fileName": "mapped.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 34,
      "name": "parens",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 35,
          "name": "ZZ",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "parens.ts",
              "line": 3,
              "character": 12
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "literal",
                "value": 1
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 36,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 37,
                      "name": "a",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "parens.ts",
                          "line": 3,
                          "character": 24
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        37
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "parens.ts",
                      "line": 3,
                      "character": 22
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            35
          ]
        }
      ],
      "sources": [
        {
          "fileName": "parens.ts",
          "line": 3,
          "character": 0
        }
      ]
    },
    {
      "id": 38,
      "name": "query",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 40,
          "name": "TypeOfX",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "query.ts",
              "line": 3,
              "character": 12
            }
          ],
          "type": {
            "type": "query",
            "queryType": {
              "type": "reference",
              "id": 39,
              "name": "x"
            }
          }
        },
        {
          "id": 39,
          "name": "x",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "query.ts",
              "line": 1,
              "character": 13
            }
          ],
          "type": {
            "type": "literal",
            "value": 1
          },
          "defaultValue": "1"
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            40
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            39
          ]
        }
      ],
      "sources": [
        {
          "fileName": "query.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 41,
      "name": "tuple",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 50,
          "name": "LeadingRest",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 14,
              "character": 12
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "rest",
                "elementType": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        },
        {
          "id": 42,
          "name": "NamedTuple",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 1,
              "character": 12
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "named-tuple-member",
                "name": "name",
                "isOptional": false,
                "element": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "type": "named-tuple-member",
                "name": "optionalName",
                "isOptional": true,
                "element": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          }
        },
        {
          "id": 48,
          "name": "WithOptionalElements",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 11,
              "character": 12
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "literal",
                "value": 1
              },
              {
                "type": "optional",
                "elementType": {
                  "type": "literal",
                  "value": 2
                }
              },
              {
                "type": "optional",
                "elementType": {
                  "type": "literal",
                  "value": 3
                }
              }
            ]
          }
        },
        {
          "id": 44,
          "name": "WithRestType",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 5,
              "character": 12
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "literal",
                "value": 1
              },
              {
                "type": "rest",
                "elementType": {
                  "type": "array",
                  "elementType": {
                    "type": "literal",
                    "value": 2
                  }
                }
              }
            ]
          }
        },
        {
          "id": 46,
          "name": "WithRestTypeNames",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 8,
              "character": 12
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "named-tuple-member",
                "name": "a",
                "isOptional": false,
                "element": {
                  "type": "literal",
                  "value": 123
                }
              },
              {
                "type": "named-tuple-member",
                "name": "b",
                "isOptional": false,
                "element": {
                  "type": "array",
                  "elementType": {
                    "type": "literal",
                    "value": 456
                  }
                }
              }
            ]
          }
        },
        {
          "id": 51,
          "name": "leadingRest",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 16,
              "character": 13
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "rest",
                "elementType": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "defaultValue": "..."
        },
        {
          "id": 43,
          "name": "namedTuple",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 3,
              "character": 13
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "named-tuple-member",
                "name": "name",
                "isOptional": false,
                "element": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "type": "named-tuple-member",
                "name": "optionalName",
                "isOptional": true,
                "element": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ]
          },
          "defaultValue": "..."
        },
        {
          "id": 49,
          "name": "withOptionalElements",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 12,
              "character": 13
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "literal",
                "value": 1
              },
              {
                "type": "optional",
                "elementType": {
                  "type": "literal",
                  "value": 2
                }
              },
              {
                "type": "optional",
                "elementType": {
                  "type": "literal",
                  "value": 3
                }
              }
            ]
          },
          "defaultValue": "..."
        },
        {
          "id": 45,
          "name": "withRestType",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 6,
              "character": 13
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "literal",
                "value": 1
              },
              {
                "type": "rest",
                "elementType": {
                  "type": "array",
                  "elementType": {
                    "type": "literal",
                    "value": 2
                  }
                }
              }
            ]
          },
          "defaultValue": "..."
        },
        {
          "id": 47,
          "name": "withRestTypeNames",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "tuple.ts",
              "line": 9,
              "character": 13
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "named-tuple-member",
                "name": "a",
                "isOptional": false,
                "element": {
                  "type": "literal",
                  "value": 123
                }
              },
              {
                "type": "rest",
                "elementType": {
                  "type": "named-tuple-member",
                  "name": "b",
                  "isOptional": false,
                  "element": {
                    "type": "array",
                    "elementType": {
                      "type": "literal",
                      "value": 456
                    }
                  }
                }
              }
            ]
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            50,
            42,
            48,
            44,
            46
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            51,
            43,
            49,
            45,
            47
          ]
        }
      ],
      "sources": [
        {
          "fileName": "tuple.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 52,
      "name": "type-operator",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 54,
          "name": "B",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "type-operator.ts",
              "line": 2,
              "character": 12
            }
          ],
          "type": {
            "type": "typeOperator",
            "target": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            "operator": "readonly"
          }
        },
        {
          "id": 55,
          "name": "C",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "type-operator.ts",
              "line": 3,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 56,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 57,
                  "name": "prop1",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "type-operator.ts",
                      "line": 4,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 58,
                  "name": "prop2",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "type-operator.ts",
                      "line": 5,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    57,
                    58
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "type-operator.ts",
                  "line": 3,
                  "character": 16
                }
              ]
            }
          }
        },
        {
          "id": 59,
          "name": "D",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "type-operator.ts",
              "line": 7,
              "character": 12
            }
          ],
          "type": {
            "type": "typeOperator",
            "target": {
              "type": "reference",
              "id": 55,
              "name": "C"
            },
            "operator": "keyof"
          }
        },
        {
          "id": 53,
          "name": "a",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "type-operator.ts",
              "line": 1,
              "character": 13
            }
          ],
          "type": {
            "type": "typeOperator",
            "target": {
              "type": "intrinsic",
              "name": "symbol"
            },
            "operator": "unique"
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [
            54,
            55,
            59
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            53
          ]
        }
      ],
      "sources": [
        {
          "fileName": "type-operator.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 60,
      "name": "union-or-intersection",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 61,
          "name": "FirstType",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "First type for union or intersection type tests."
              }
            ]
          },
          "children": [
            {
              "id": 62,
              "name": "firstProperty",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Property of first type."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "union-or-intersection.ts",
                  "line": 8,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                62
              ]
            }
          ],
          "sources": [
            {
              "fileName": "union-or-intersection.ts",
              "line": 4,
              "character": 17
            }
          ]
        },
        {
          "id": 63,
          "name": "SecondType",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Second type for union or intersection type tests."
              }
            ]
          },
          "children": [
            {
              "id": 64,
              "name": "secondProperty",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Property of second type."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "union-or-intersection.ts",
                  "line": 18,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                64
              ]
            }
          ],
          "sources": [
            {
              "fileName": "union-or-intersection.ts",
              "line": 14,
              "character": 17
            }
          ]
        },
        {
          "id": 65,
          "name": "ThirdType",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Third type for union or intersection type tests."
              }
            ]
          },
          "children": [
            {
              "id": 68,
              "name": "thirdComplexProperty",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Complex Property of third type."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "union-or-intersection.ts",
                  "line": 38,
                  "character": 4
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "array",
                      "elementType": {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "reference",
                            "id": 61,
                            "name": "FirstType"
                          },
                          {
                            "type": "reference",
                            "id": 63,
                            "name": "SecondType"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 67,
              "name": "thirdIntersectionProperty",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Intersection Property of third type."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "union-or-intersection.ts",
                  "line": 33,
                  "character": 4
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 61,
                    "name": "FirstType"
                  },
                  {
                    "type": "reference",
                    "id": 65,
                    "name": "ThirdType"
                  }
                ]
              }
            },
            {
              "id": 66,
              "name": "thirdUnionProperty",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Union Property of third type."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "union-or-intersection.ts",
                  "line": 28,
                  "character": 4
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 61,
                    "name": "FirstType"
                  },
                  {
                    "type": "reference",
                    "id": 63,
                    "name": "SecondType"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                68,
                67,
                66
              ]
            }
          ],
          "sources": [
            {
              "fileName": "union-or-intersection.ts",
              "line": 24,
              "character": 17
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            61,
            63,
            65
          ]
        }
      ],
      "sources": [
        {
          "fileName": "union-or-intersection.ts",
          "line": 4,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "kind": 2,
      "children": [
        1,
        11,
        21,
        34,
        38,
        41,
        52,
        60
      ]
    }
  ]
}